<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/aop
    		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <!--引入配置属性文件 -->
    <context:property-placeholder location="classpath*:jdbc.properties" />
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>
    <!--自动扫描含有@Service将其注入为bean -->
    <context:component-scan base-package="com.ryx.**.service,com.ryx.**.service.impl,com.ryx.**.jobs,com.ryx.**.unitmain" />
    <bean id="logService" class="com.ryx.credit.common.log.LogServiceImpl"></bean>
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut
            expression="execution(* com.ryx.*.service.impl.*.*(..))"
            id="myPointcut" />
        <!-- 切面： 将哪个对象中的哪个方法，织入到哪个切入点 -->
        <aop:aspect id="aspectLog" ref="logService">
           <!--  前置通知 -->
        <!-- <aop:before method="log" pointcut-ref="myPointcut" />
        <aop:after method="logArg" pointcut-ref="myPointcut" /> --> 
        <aop:after-returning method="logArgAndReturn" returning="returnObj" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>
    <!--<bean id="loginAuthFilter" class="com.ryx.common.filter.AuthFilter"></bean>-->
    <import resource="dubbo-provider.xml"/>
    <import resource="spring-redis.xml"/>
</beans>